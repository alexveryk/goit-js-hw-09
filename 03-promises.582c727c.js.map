{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAmCpC,SAASC,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAEnDA,E,IA3CPL,EAAKa,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAKJ,IAJA,IAEqBC,EAAjBF,EAAIG,cADNC,SAAYC,EAAKH,EAALX,MAAOe,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAIrBC,EAAI,EAAGC,EAAIC,OAAOL,EAAMM,OAC5BH,EAAIE,OAAOH,EAAOI,OAClBH,IAAKC,GAAKC,OAAOJ,EAAKK,OACtB,CAIAtB,EAHemB,EAAI,EACPC,GAGTG,MAAK,SAACtB,EAAUC,GACfsB,QAAQC,IAAI,uBAAwChB,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAC1DwB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCnB,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,IAGjD2B,OAAM,SAAC5B,EAAUC,GAChBsB,QAAQC,IAAI,sBAAuChB,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OACzDwB,EAAA/B,GAASgC,OAAOG,QACd,sBAAuCrB,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,IAKrDL,EAAKkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  for (\n    let i = 0, j = Number(delay.value);\n    i < Number(amount.value);\n    i++, j += Number(step.value)\n  ) {\n    let position = i + 1;\n    let delay = j;\n\n    createPromise(position, delay)\n      .then((position, delay) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch((position, delay) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay2","step","amount","i","j","Number","value","then","console","log","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.582c727c.js.map"}